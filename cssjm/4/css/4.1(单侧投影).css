/* box-shadow 问题，就是如何只在元素的一侧（偶尔是两侧）设置投影。在 stackoverflow.com 上进行快速搜索，就可以搜到近千个此类问
题。这种现象不无道理，因为只在单侧显示投影可以创建一种优雅而又真实的效果。有时，走投无路的开发者甚至会写信给 CSS工作组的邮件列表，
要求增加类似 box-shadow-bottom 这样的属性来实现这个需求。其实，利用我们再熟悉不过的 box-shadow 属性，再加上一点创意，就可以完美
地实现这个效果。 */

/* 大多数人使用 box-shadow 的方法是，指定三个长度值和一个颜色值，因为模糊半径扩散半径的原因，阴影总会露出 */
.root {
  width: 100px;
  height: 100px;
  box-shadow: 2px 3px 4px rgba(0,0,0,.5);
}

/* 接下来的几个步骤很好地（虽然在技术上还不够严谨）以图形化的方式讲解了投影是如何绘制的 */
/* 
  (1) 以该元素相同的尺寸1①和位置，画一个 rgba(0,0,0,.5) 的矩形。
  (2) 把它向右移 2px，向下移 3px。
  (3) 使用高斯模糊算法（或类似算法）将它进行 4px 的模糊处理。这在本质上表示在阴影边缘发生阴影色和纯透明色之间的颜色过渡长度近似于模
      糊半径的两倍（比如在这里是 8px）。
  (4) 接下来，模糊后的矩形与原始元素的交集部分会被切除掉，因此它看起来像是在该元素的“后面”。这跟大多数开发者所理解的情况（元素叠
      在模糊后矩形的上层）可能稍有不同。不过，在某些场景下，意识到没有任何投影绘制在元素的下层十分重要。举例来说，如果给元素设置一层半透
      明的背景，我们就看不到它下层有任何投影。这一点跟 text-shadow 不同，因为文字下层的投影不会被裁切。
*/
/* 使用 4px 的模糊半径意味着投影的尺寸会比元素本身的尺寸大约 8px，因此投影的最外圈会从元素的四面向外显露出来（确切地说，我们将在
顶部看到 1px 的投影（4px-3px）、在左侧看到 2px（4px-2px）、在右侧看到 6px（4px+2px）、在底部看到 7px（4px+3px）。在实践中，投影看起
来会比这些值稍小，因为投影的颜色在边缘处的过渡不是线性的，这跟渐变不一样。）。我们只需改变偏移量，就可以把投影的顶部和左侧隐藏起来，只要
这两个方向上的偏移量不小于4px 就可以了。但是，这在某种程度上会导致外露的投影太过浓重，看起来不是很美观。另外，就算这个问题勉强可以接受，
我们想要的投影也只能出现在单侧（而不是相邻的两侧），还记得吗？最终的解决方案来自 box-shadow鲜为人知的第四个长度参数。它排在模糊半径参数
之后，称作扩张半径。这个参数会根据你指定的值去扩大或（当指定负值时）缩小投影的尺寸。举例来说，一个 -5px 的扩张半径会把投影的宽度和高度各
减少 10px（即每边各 5px）。从逻辑上来说，如果我们应用一个负的扩张半径，而它的值刚好等于模糊半径，那么投影的尺寸就会与投影所属元素的尺寸
完全一致。除非用偏移量（前两个长度参数）来移动它，我们将完全看不见任何投影。因此，如果给投影应用一个正的垂直偏移量，我们就会在元素的底部
看到一道投影，而元素的另外三侧是没有投影的，这正是我们一直苦苦追寻的效果： */

.root {
  width: 100px;
  height: 100px;
  box-shadow: 0 5px 4px -4px black;
}

/* 邻边投影 */
/* 另一个经常被问到的问题是，如何在元素的两条边上设置投影。如果这两条边是相邻的（比如右侧和底部），就比较容易一些：要么满足于要么运用上一
段所述技巧，并做出如下调整。
我们不应该把投影缩得太小，而是只需把阴影藏进一侧，另一侧自然露出就好。因此，扩张半径不应设为模糊半径的相反值，而应该是这个相反值的一半。
需要指定两个偏移量，因为我们希望投影在水平和垂直方向上同时移动。它们的值需要大于或等于模糊半径的一半，因为我们希望把投影藏进另外两条边之内。
 */
.root {
  width: 100px;
  height: 100px;
  box-shadow: 4px 3px 6px -3px black;
}


/* 双侧投影 */
/* 当我们想把投影设置在元素的两条对边（比如左侧和右侧）时，事情就变得棘手了。因为扩张半径在四个方向上的作用是均等的（也就是说，我们
无法指定投影在水平方向上放大，而在垂直方向上缩小），唯一的办法是用两块投影（每边各一块）来达到目的。然后基本上就是把“单侧投影”中的
技巧运用两次： */
.root {
  width: 100px;
  height: 100px;
  box-shadow: 5px 0 5px -5px black,
              -5px 0 5px -5px black;
}