/* 请注意，这些原生特性通常比预处理器提供的版本要强大得多，因为它
们是动态的。举个例子，预处理器完全不知道如何完成 100% - 50px 这样
的计算，因为在页面真正被渲染之前，百分比值是无法解析的。但是，原生
CSS 的 calc() 在计算这样的表达式时没有任何压力。与此类似，下面这样
的变量玩法在预处理器中是不可能做到的：
ul { --c: purple; }
ol { --accent-color: rebeccapurple; }
li { background: var(--accent-color); } 
上面提到的原生 CSS 特性绝大多数在目前还没有得到很好的支持，因
此在很多情况下，如果可维护性很重要（它确实很重要），使用预处理器是
不可避免的。*/

/* 我的建议是，在每个项目开始时使用纯 CSS，只有当代码开 始变得无法保持 DRY 时，才切换到预处理器的方案。为了避免可能发生的
“依赖”或“滥用”，在引入预处理器的问题上需要冷静决策，不应该在每个项目一开始时就不动脑筋顺着惯性来。*/