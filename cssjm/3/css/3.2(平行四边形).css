/* 在视觉设计中，平行四边形往往可以传达出一种动感 */
/* 让我们试着用 CSS 创建一个按钮状的平行四边形链接。我们的起点就是一个普通的块状按钮，辅以一些简单的样式。然后，我
们可以通过 skew() 的变形属性来对这个矩形进行斜向拉伸 */
.root {
  margin: 50px;
  width: 200px;
  height: 100px;
  text-align: center;
  line-height: 100px;
  /* transform: skew(-45deg); */
}

/* 但是，这导致它的内容也发生了斜向变形，这很不好看，而且难读。有没有办法只让容器的形状倾斜，而保持其内容不变呢？ */

/* 我们可以对内容再应用一次反向的 skew() 变形，从而抵消容器的变形效果，最终产生我们所期望的结果。不幸的是，这意味着我们将不得不使用
一层额外的 HTML 元素来包裹内容，比如用一个 div： */
/* .root > div {
  transform: skew(45deg);
} */

/* 我们可以看到，这个方法的表现很不错，但它也意味着我们不得不添加额外的 HTML 元素。如果结构层的变更是不允许的，或者你
希望严格保持结构层的纯净度，别担心，我们还有一个纯 CSS 的解决方案。 */
/* 另一种思路是把所有样式（背景、边框等）应用到伪元素上，然后再对伪元素进行变形。因为我们的内容并不是包含在伪元素里的，所以内容并不
会受到变形的影响。下面来看看这个技巧能否得到与前面相同的链接样式。我们希望伪元素保持良好的灵活性，可以自动继承其宿主元素的尺寸，
甚至当宿主元素的尺寸是由其内容来决定时仍然如此。一个简单的办法是给宿主元素应用 position: relative 样式，并为伪元素设置 position:
absolute，然后再把所有偏移量设置为零，以便让它在水平和垂直方向上都被拉伸至宿主元素的尺寸。代码看起来是这样的： */
.root {
  position: relative;
}

.root::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #eee;

}