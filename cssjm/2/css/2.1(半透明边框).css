.root-father {
  width: 400px;
  height: 400px;
  display: flex;
  background: round url(../OET.jpg);
  justify-content: space-around;
  align-items: center;
}

/* 
假设我们想给一个容器设置一层白色背景和一道半透明白色边框，body
的背景会从它的半透明边框透上来。我们最开始的尝试可能是这样的：
*/
.root {
  width: 100px;
  height: 100px;
  border: 10px solid hsla(0,0%,100%,.5);
  background: white;
}
/* 尽管看起来并不像那么回事，但我们的边框其实是存在的。默认情况下，背景会延伸到边框所在的区域下层。这一点很容易验证，给一个有背景的元
  素应用一道老土的虚线边框，就可以看出来（参见图 2-3）。即使你使用的是不透明的实色边框，这个事实也不会有任何改变。只不过在上面的例子中，
  这个特性完全打破了我们的设计意图。我们所做的事情并没有让 body 的背景从半透明白色边框处透上来，
  !而是在半透明白色边框处透出了这个容器自己的纯白实色背景
  这实际上得到的效果跟纯白实色的边框看起来完全一样。在 CSS 2.1 中，这就是背景的工作原理。我们只能接受它并且向前看。
  谢天谢地，从背景与边框（第三版）（http://w3.org/TR/css3-background）开始，我们可以通过 background-clip 属性来调整上述默认行为所带来的不
  便。这个属性的初始值是 border-box，意味着背景会被元素的 border box（边框的外沿框）裁切掉。如果不希望背景侵入边框所在的范围，我们要做
  的就是把它的值设为 padding-box，这样浏览器就会用内边距的外沿来把背景裁切掉。
*/
.root {
  width: 100px;
  height: 100px;
  border: 10px solid hsla(0,0%,100%,.5);
  background: padding-box white;
}